import express from 'express';
import nodemailer from 'nodemailer';
import cors from 'cors';
import 'dotenv/config'

const app = express()
const port = 4400

app.disable('x-powered-by')
app.use(express.json())
app.use(express.urlencoded({ extended: true }))

// app.use(cors())

app.use(cors({
  origin: process.env.CLIENT_URI,
  credentials: true,
}))

const transport = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: process.env.SMTP_PORT,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  }
})

const sendMail = (mailData) => {
  const {tourName, tourPrice, email, phone, company, name, subject, message} = mailData
  const tourInfo = tourName && tourPrice ? `–í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ —Ç—É—Ä: <strong>${tourName}</strong> –ø–æ —Ü–µ–Ω–µ <strong>${tourPrice}</strong>.` : '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É.';

  const html = `
  <div style="text-align: center; margin-bottom: 20px;">
    <h2 style="font-family: Arial, sans-serif; color: #333;">üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</h2>
    <p style="font-family: Arial, sans-serif; color: #777;">${tourInfo}</p>
  </div>
  <table style="border-collapse: collapse; width: 100%; max-width: 610px; margin: 0 auto; background-color: #fff;">
    <tbody>
      <tr>
        <th style="padding: 10px; border: 1px solid #ccc; text-align: left;">–ü–∞—Ä–∞–º–µ—Ç—Ä</th>
        <th style="padding: 10px; border: 1px solid #ccc; text-align: left;">–ó–Ω–∞—á–µ–Ω–∏–µ</th>
      </tr>
      <tr>
        <td style="padding: 10px; border: 1px solid #ccc;">–ò–º—è</td>
        <td style="padding: 10px; border: 1px solid #ccc;">${name}</td>
      </tr>
      <tr>
        <td style="padding: 10px; border: 1px solid #ccc;">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</td>
        <td style="padding: 10px; border: 1px solid #ccc;">${phone}</td>
      </tr>
      <tr>
        <td style="padding: 10px; border: 1px solid #ccc;">–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —è—â–∏–∫</td>
        <td style="padding: 10px; border: 1px solid #ccc;">${email}</td>
      </tr>
      <tr>
        <td style="padding: 10px; border: 1px solid #ccc;">–ö–æ–º–ø–∞–Ω–∏—è</td>
        <td style="padding: 10px; border: 1px solid #ccc;">${company}</td>
      </tr>
      <tr>
        <td style="padding: 10px; border: 1px solid #ccc;">–°–æ–æ–±—â–µ–Ω–∏–µ</td>
        <td style="padding: 10px; border: 1px solid #ccc;">${message}</td>
      </tr>
    </tbody>
  </table>
  `;

  return new Promise((resolve, reject) =>{
    transport.sendMail({
      from: email,
      to: process.env.EMAIL_USER,
      subject: subject,
      html: html,
    }, function(error, info){
      if (error) {
        console.log(error)
        resolve({
          error: true,
          message: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
          errorData: error
        })
      } else {
        resolve({
          error: false,
          message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
        })
      }
    })
  })
}

app.post('/send-mail', async (req, res) => {
  try {
    const mailData = req.body.mailData

    if (!mailData || typeof mailData !== 'object') {
      res.json({
        error: true,
        message: "–ù–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã –¥–∞–Ω–Ω—ã–µ"
      })
    }

    const resp = await sendMail(mailData)

    res.json({
      ...resp
    })
  } catch (e) {
    console.log(e)

    res.json({
      error: true,
      message: "–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—á—Ç—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞"
    })
  }
})

app.listen(port, () => {
  console.log(` http://localhost:${4400}/`)
})